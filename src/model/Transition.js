/**
 * Shotstack
 * The Shotstack API is a video editing service that allows for the automated creation of videos using JSON. You can configure an edit and POST it to the Shotstack API which will render your video and provide a file location when complete. For more details check https://shotstack.io
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ShotstackSdk) {
      root.ShotstackSdk = {};
    }
    root.ShotstackSdk.Transition = factory(root.ShotstackSdk.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The Transition model module.
   * @module model/Transition
   * @version v1
   */

  /**
   * Constructs a new <code>Transition</code>.
   * In and out transitions for a clip - i.e. fade in and fade out
   * @alias module:model/Transition
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>Transition</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Transition} obj Optional instance to populate.
   * @return {module:model/Transition} The populated <code>Transition</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('in')) {
        obj['in'] = ApiClient.convertToType(data['in'], 'String');
      }
      if (data.hasOwnProperty('out')) {
        obj['out'] = ApiClient.convertToType(data['out'], 'String');
      }
    }
    return obj;
  }

  /**
   * The transition in. Available transitions are:   <ul>     <li>`fade` - fade in</li>     <li>`reveal` - reveal from left to right</li>     <li>`wipeLeft` - fade across screen to the left</li>     <li>`wipeRight` - fade across screen to the right</li>     <li>`slideLeft` - move slightly left and fade in</li>     <li>`slideRight` - move slightly right and fade in</li>     <li>`slideUp` - move slightly up and fade in</li>     <li>`slideDown` - move slightly down and fade in</li>     <li>`carouselLeft` - slide in from right to left</li>     <li>`carouselRight` - slide in from left to right</li>     <li>`carouselUp` - slide in from bottom to top</li>     <li>`carouselDown` - slide in from top  to bottom</li>     <li>`zoom` - fast zoom in</li>   </ul>
   * @member {module:model/Transition.InEnum} in
   */
  exports.prototype['in'] = undefined;
  /**
   * The transition out. Available transitions are:   <ul>     <li>`fade` - fade out</li>     <li>`reveal` - reveal from right to left</li>     <li>`wipeLeft` - fade across screen to the left</li>     <li>`wipeRight` - fade across screen to the right</li>     <li>`slideLeft` - move slightly left and fade out</li>     <li>`slideRight` - move slightly right and fade out</li>     <li>`slideUp` - move slightly up and fade out</li>     <li>`slideDown` - move slightly down and fade out</li>     <li>`carouselLeft` - slide out from right to left</li>     <li>`carouselRight` - slide out from left to right</li>     <li>`carouselUp` - slide out from bottom to top</li>     <li>`carouselDown` - slide out from top  to bottom</li>     <li>`zoom` - fast zoom out</li>   </ul>
   * @member {module:model/Transition.OutEnum} out
   */
  exports.prototype['out'] = undefined;


  /**
   * Returns The transition in. Available transitions are:   <ul>     <li>`fade` - fade in</li>     <li>`reveal` - reveal from left to right</li>     <li>`wipeLeft` - fade across screen to the left</li>     <li>`wipeRight` - fade across screen to the right</li>     <li>`slideLeft` - move slightly left and fade in</li>     <li>`slideRight` - move slightly right and fade in</li>     <li>`slideUp` - move slightly up and fade in</li>     <li>`slideDown` - move slightly down and fade in</li>     <li>`carouselLeft` - slide in from right to left</li>     <li>`carouselRight` - slide in from left to right</li>     <li>`carouselUp` - slide in from bottom to top</li>     <li>`carouselDown` - slide in from top  to bottom</li>     <li>`zoom` - fast zoom in</li>   </ul>
   * @return {module:model/Transition.InEnum}
   */
  exports.prototype.getIn = function() {
    return this['in'];
  }

  /**
   * Sets The transition in. Available transitions are:   <ul>     <li>`fade` - fade in</li>     <li>`reveal` - reveal from left to right</li>     <li>`wipeLeft` - fade across screen to the left</li>     <li>`wipeRight` - fade across screen to the right</li>     <li>`slideLeft` - move slightly left and fade in</li>     <li>`slideRight` - move slightly right and fade in</li>     <li>`slideUp` - move slightly up and fade in</li>     <li>`slideDown` - move slightly down and fade in</li>     <li>`carouselLeft` - slide in from right to left</li>     <li>`carouselRight` - slide in from left to right</li>     <li>`carouselUp` - slide in from bottom to top</li>     <li>`carouselDown` - slide in from top  to bottom</li>     <li>`zoom` - fast zoom in</li>   </ul>
   * @param {module:model/Transition.InEnum} _in The transition in. Available transitions are:   <ul>     <li>`fade` - fade in</li>     <li>`reveal` - reveal from left to right</li>     <li>`wipeLeft` - fade across screen to the left</li>     <li>`wipeRight` - fade across screen to the right</li>     <li>`slideLeft` - move slightly left and fade in</li>     <li>`slideRight` - move slightly right and fade in</li>     <li>`slideUp` - move slightly up and fade in</li>     <li>`slideDown` - move slightly down and fade in</li>     <li>`carouselLeft` - slide in from right to left</li>     <li>`carouselRight` - slide in from left to right</li>     <li>`carouselUp` - slide in from bottom to top</li>     <li>`carouselDown` - slide in from top  to bottom</li>     <li>`zoom` - fast zoom in</li>   </ul>
   */
  exports.prototype.setIn = function(_in) {
    this['in'] = _in;
    return this;
  }


  /**
   * Returns The transition out. Available transitions are:   <ul>     <li>`fade` - fade out</li>     <li>`reveal` - reveal from right to left</li>     <li>`wipeLeft` - fade across screen to the left</li>     <li>`wipeRight` - fade across screen to the right</li>     <li>`slideLeft` - move slightly left and fade out</li>     <li>`slideRight` - move slightly right and fade out</li>     <li>`slideUp` - move slightly up and fade out</li>     <li>`slideDown` - move slightly down and fade out</li>     <li>`carouselLeft` - slide out from right to left</li>     <li>`carouselRight` - slide out from left to right</li>     <li>`carouselUp` - slide out from bottom to top</li>     <li>`carouselDown` - slide out from top  to bottom</li>     <li>`zoom` - fast zoom out</li>   </ul>
   * @return {module:model/Transition.OutEnum}
   */
  exports.prototype.getOut = function() {
    return this['out'];
  }

  /**
   * Sets The transition out. Available transitions are:   <ul>     <li>`fade` - fade out</li>     <li>`reveal` - reveal from right to left</li>     <li>`wipeLeft` - fade across screen to the left</li>     <li>`wipeRight` - fade across screen to the right</li>     <li>`slideLeft` - move slightly left and fade out</li>     <li>`slideRight` - move slightly right and fade out</li>     <li>`slideUp` - move slightly up and fade out</li>     <li>`slideDown` - move slightly down and fade out</li>     <li>`carouselLeft` - slide out from right to left</li>     <li>`carouselRight` - slide out from left to right</li>     <li>`carouselUp` - slide out from bottom to top</li>     <li>`carouselDown` - slide out from top  to bottom</li>     <li>`zoom` - fast zoom out</li>   </ul>
   * @param {module:model/Transition.OutEnum} out The transition out. Available transitions are:   <ul>     <li>`fade` - fade out</li>     <li>`reveal` - reveal from right to left</li>     <li>`wipeLeft` - fade across screen to the left</li>     <li>`wipeRight` - fade across screen to the right</li>     <li>`slideLeft` - move slightly left and fade out</li>     <li>`slideRight` - move slightly right and fade out</li>     <li>`slideUp` - move slightly up and fade out</li>     <li>`slideDown` - move slightly down and fade out</li>     <li>`carouselLeft` - slide out from right to left</li>     <li>`carouselRight` - slide out from left to right</li>     <li>`carouselUp` - slide out from bottom to top</li>     <li>`carouselDown` - slide out from top  to bottom</li>     <li>`zoom` - fast zoom out</li>   </ul>
   */
  exports.prototype.setOut = function(out) {
    this['out'] = out;
    return this;
  }


  /**
   * Allowed values for the <code>in</code> property.
   * @enum {String}
   * @readonly
   */
  exports.InEnum = {
    /**
     * value: "fade"
     * @const
     */
    "fade": "fade",
    /**
     * value: "reveal"
     * @const
     */
    "reveal": "reveal",
    /**
     * value: "wipeLeft"
     * @const
     */
    "wipeLeft": "wipeLeft",
    /**
     * value: "wipeRight"
     * @const
     */
    "wipeRight": "wipeRight",
    /**
     * value: "slideLeft"
     * @const
     */
    "slideLeft": "slideLeft",
    /**
     * value: "slideRight"
     * @const
     */
    "slideRight": "slideRight",
    /**
     * value: "slideUp"
     * @const
     */
    "slideUp": "slideUp",
    /**
     * value: "slideDown"
     * @const
     */
    "slideDown": "slideDown",
    /**
     * value: "carouselLeft"
     * @const
     */
    "carouselLeft": "carouselLeft",
    /**
     * value: "carouselRight"
     * @const
     */
    "carouselRight": "carouselRight",
    /**
     * value: "carouselUp"
     * @const
     */
    "carouselUp": "carouselUp",
    /**
     * value: "carouselDown"
     * @const
     */
    "carouselDown": "carouselDown",
    /**
     * value: "zoom"
     * @const
     */
    "zoom": "zoom"  };

  /**
   * Allowed values for the <code>out</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OutEnum = {
    /**
     * value: "fade"
     * @const
     */
    "fade": "fade",
    /**
     * value: "reveal"
     * @const
     */
    "reveal": "reveal",
    /**
     * value: "wipeLeft"
     * @const
     */
    "wipeLeft": "wipeLeft",
    /**
     * value: "wipeRight"
     * @const
     */
    "wipeRight": "wipeRight",
    /**
     * value: "slideLeft"
     * @const
     */
    "slideLeft": "slideLeft",
    /**
     * value: "slideRight"
     * @const
     */
    "slideRight": "slideRight",
    /**
     * value: "slideUp"
     * @const
     */
    "slideUp": "slideUp",
    /**
     * value: "slideDown"
     * @const
     */
    "slideDown": "slideDown",
    /**
     * value: "carouselLeft"
     * @const
     */
    "carouselLeft": "carouselLeft",
    /**
     * value: "carouselRight"
     * @const
     */
    "carouselRight": "carouselRight",
    /**
     * value: "carouselUp"
     * @const
     */
    "carouselUp": "carouselUp",
    /**
     * value: "carouselDown"
     * @const
     */
    "carouselDown": "carouselDown",
    /**
     * value: "zoom"
     * @const
     */
    "zoom": "zoom"  };


  return exports;
}));


